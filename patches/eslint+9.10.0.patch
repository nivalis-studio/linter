diff --git a/node_modules/eslint/lib/eslint/eslint.js b/node_modules/eslint/lib/eslint/eslint.js
index 1e69f04..2139292 100644
--- a/node_modules/eslint/lib/eslint/eslint.js
+++ b/node_modules/eslint/lib/eslint/eslint.js
@@ -873,6 +873,34 @@ class ESLint {
         return privateMembers.get(this).linter.hasFlag(flag);
     }
 
+    /**
+     * List the files that will be linted.
+     * @param {string|string[]} patterns An array of file and directory names.
+     * @returns {Promise<LintResult[]>} The results.
+     */
+    async getFilePaths(normalizedPatterns) {
+        const {
+            options: eslintOptions
+        } = privateMembers.get(this);
+
+        const configs = await calculateConfigArray(this, eslintOptions);
+        const {
+            cwd,
+            globInputPaths,
+            errorOnUnmatchedPattern,
+        } = eslintOptions;
+
+        const filePaths = await findFiles({
+            patterns: normalizedPatterns,
+            cwd,
+            globInputPaths,
+            configs,
+            errorOnUnmatchedPattern
+        });
+
+        return filePaths
+    }
+
     /**
      * Executes the current configuration on an array of file and directory names.
      * @param {string|string[]} patterns An array of file and directory names.
@@ -928,8 +956,6 @@ class ESLint {
             fixTypes,
             ruleFilter,
             stats,
-            globInputPaths,
-            errorOnUnmatchedPattern,
             warnIgnored
         } = eslintOptions;
         const startTime = Date.now();
@@ -951,13 +977,9 @@ class ESLint {
             }
         }
 
-        const filePaths = await findFiles({
-            patterns: normalizedPatterns,
-            cwd,
-            globInputPaths,
-            configs,
-            errorOnUnmatchedPattern
-        });
+        const filePaths = await this.getFilePaths(
+            patterns
+        );
         const controller = new AbortController();
         const retryCodes = new Set(["ENFILE", "EMFILE"]);
         const retrier = new Retrier(error => retryCodes.has(error.code));
